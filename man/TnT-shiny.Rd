% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TnT.R
\name{TnT-shiny}
\alias{TnT-shiny}
\alias{TnTOutput}
\alias{renderTnT}
\title{Shiny bindings for TnT}
\usage{
TnTOutput(outputId, width = "100\%", height = "400px")

renderTnT(expr, env = parent.frame(), quoted = FALSE)
}
\arguments{
\item{outputId}{output variable to read from}

\item{width, height}{Must be a valid CSS unit (like \code{'100\%'},
\code{'400px'}, \code{'auto'}) or a number, which will be coerced to a
string and have \code{'px'} appended.}

\item{expr}{An expression that generates a TnT}

\item{env}{The environment in which to evaluate \code{expr}.}

\item{quoted}{Is \code{expr} a quoted expression (with \code{quote()})? This
is useful if you want to save an expression in a variable.}
}
\description{
Output and render functions for using TnT within Shiny
applications and interactive Rmd documents.
}
\examples{
if (interactive() && require(shiny)) {
    ui <- fluidPage(
        fluidRow(TnTOutput("out"))
    )
    server <- function (input, output) {
        output$out <- renderTnT({
            TnT("
              tnt.board.genome()
                .from(0)
                .to(500)
                .min(0)
                .max(1000)
                .add_track(tnt.board.track()
                           .height(20)
                           .color('white')
                           .display(tnt.board.track.feature.axis()))
                .add_track(tnt.board.track()
                           .height(30)
                           .color('#FFCFDD')
                           .data(tnt.board.track.data.sync()
                                 .retriever(function() {return [{start : 200, end : 350}]}))
                           .display(tnt.board.track.feature.block()
                                    .color('blue')
                                    .index(function (d) {return d.start})))
            ")
        })
    }
    shinyApp(ui = ui, server = server)
}
}
